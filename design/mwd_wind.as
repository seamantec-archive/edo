package {	import mx.flash.UIMovieClip;	import com.events.*;	import fl.transitions.Tween;	import fl.transitions.easing.None;	import com.sailing.ForgatHandler;	import flash.events.Event	import fl.motion.easing.Back;	import flash.events.MouseEvent;	import com.sailing.SailData;		[Event(name = "updateSailing",type = "com.events.UpdateSailingDatasEvent")]    [Event(name = "update-state", type = "com.events.UpdateStateEvent")]	//analog.mutato.visible = false		public class mwd_wind extends UIMovieClip	{		public var updateVars:Array = [			"mwd"			];				public var actualState:String = "";		var forgatHandler:ForgatHandler;				public function mwd_wind()		{			super();			this.addEventListener(UpdateSailingDatasEvent.UPDATE_SAILING, updateDatas);						forgatHandler = new ForgatHandler(analog.mutato, this);			this.digital.visible = false;						this.addEventListener("custom-click", digitalis);					this.addEventListener("update-state", updateState);		}		private function digitalis(event:Event):void		{				if (analog.visible)			{				analog.visible = false				digital.visible = true				actualState = "digital";			}			else			{				analog.visible = true				digital.visible = false				actualState = "analog";			}			trace(actualState)		}					private function setState(value:String)		{			actualState = value;			if (value == "digital")			{				analog.visible = false;				digital.visible = true;			}			else if (value == "analog")			{				analog.visible = true;				digital.visible = false;			}		}				private function updateState(e:UpdateStateEvent)		{			setState(e.stateType);		}					private function updateDatas(e:UpdateSailingDatasEvent):void		{			var datas:SailData = e.data;						digital.digi1_a.text = split._a(datas.mwd.windDirectionTrue);			digital.digi1_b.text = split._b(datas.mwd.windDirectionTrue);						digital.digi2_a.text =  split._a(datas.mwd.windSpeed);			digital.digi2_b.text =  split._b(datas.mwd.windSpeed);						analog.digi_a.text =  split._a(datas.mwd.windDirectionTrue);			//analog.digi_b.text =  split._b(datas.mwd.windDirectionTrue);						//analog.mutato.rotation = (datas.mwd.windDirectionTrue)			forgatHandler.forgat(datas.mwd.windDirectionTrue)					}	}}