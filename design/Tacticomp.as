package {	import mx.flash.UIMovieClip;	import com.events.UpdateSailingDatasEvent;	import fl.transitions.Tween;	import fl.transitions.easing.None;	import fl.motion.easing.Back;	import fl.transitions.easing.Back;	import com.sailing.SailData;	import com.greensock.TweenLite;	import com.greensock.plugins.TweenPlugin; 	import com.greensock.plugins.ShortRotationPlugin; 	TweenPlugin.activate([ShortRotationPlugin]);	[Event(name = "updateSailing",type = "com.events.UpdateSailingDatasEvent")]	public class Tacticomp extends UIMovieClip	{		public var updateVars:Array = [			"hdm",			"vwr",			"bwc",			"rsa",								];		//var forgoTween:Tween;//		var forgoTween_WP:Tween;//		var forgoTween_RUD:Tween;//		var forgoTween_AWA_R:Tween;//		var forgoTween_AWA_L:Tween;//		var forgoTween_LLN:Tween;//		var forgoTween_TWD:Tween;//				//var forgoTween:TweenLite;				public function Tacticomp()		{			var fps:Number = 24;			super();			this.addEventListener(UpdateSailingDatasEvent.UPDATE_SAILING, updateDatas);			//this.forgoTween1 = new Tween (mutato1,"rotation",None.easeNone,0,0,1,true);			//this.forgoTween2 = new Tween (mutato2, "rotation", None.easeNone, 0, 0, 1, true);						//this.forgoTween =  TweenLite.to(mc, 1, {shortRotation:{rotation:345});			//this.forgoTween = new Tween (forgo,"rotation",None.easeNone,0,0,1,true);//			this.forgoTween_WP = new Tween (forgo.WPT,"rotation",None.easeNone,0,0,5,true);//			this.forgoTween_RUD = new Tween (RUD,"rotation",None.easeNone,0,0,5,true);//			this.forgoTween_AWA_R = new Tween (right_mask,"rotation",None.easeNone,0,0,5,true);//			this.forgoTween_AWA_L = new Tween (left_mask,"rotation",None.easeNone,0,0,5,true);//			this.forgoTween_LLN = new Tween (LLN,"rotation",None.easeNone,0,0,5,true);//			this.forgoTween_TWD = new Tween (forgo.TWD,"rotation",None.easeNone,0,0,5,true);//			this.forgoTween.FPS = fps;//			this.forgoTween_WP.FPS = fps;//			forgoTween_RUD.FPS = fps;//			this.forgoTween_AWA_R.FPS = fps;//			this.forgoTween_AWA_L.FPS = fps;//			this.forgoTween_LLN.FPS = fps;		}		private function updateDatas(e:UpdateSailingDatasEvent):void		{			var datas:SailData = e.data;							if (datas.vwr.windDirectionSide == "L")				{					right_mask.scaleX = 0.5;					right_mask.scaleY = 0.5;					left_mask.scaleX = 1;					left_mask.scaleY = 1;				}				else				{					right_mask.scaleX = 1;					right_mask.scaleY = 1;					left_mask.scaleX = 0.5;					left_mask.scaleY = 0.5;				}			TweenLite.to(forgo, 1, {shortRotation:{rotation:0-datas.hdm.headingMagnetic}});			TweenLite.to(forgo.WPT, 1, {shortRotation:{rotation:datas.bwc.waypointBearingTrue-360}});			TweenLite.to(RUD, 1, {shortRotation:{rotation:0-datas.rsa.rudderSensorStarboard*1.5}});			TweenLite.to(right_mask, 1, {shortRotation:{rotation:datas.vwr.windDirection}});			TweenLite.to(left_mask, 1, {shortRotation:{rotation:0-datas.vwr.windDirection}});			//this.forgoTween.continueTo(0-datas.hdm.headingMagnetic, 1)//			this.forgoTween_WP.continueTo(datas.bwc.waypointBearingTrue-360, 1);//			this.forgoTween_RUD.continueTo(0-datas.rsa.rudderSensorStarboard*1.5, 1);//			this.forgoTween_AWA_R.continueTo(datas.vwr.windDirection, 1);//			this.forgoTween_AWA_L.continueTo(0-datas.vwr.windDirection, 1);			//this.forgoTween_LLN.continueTo(datas.gps_sog*300/16, 1);			//this.forgoTween_TWD.continueTo(datas.gps_sog*300/16, 1);						//this.forgoTween1.continueTo(datas.gps_sog*300/16, 1);			//this.forgoTween2.continueTo(datas.water_speed_knots*300/16, 1);						/*SPEED.mutato1.rotation = datas.gps_sog*300/16;		    SPEED.mutato2.rotation = datas.water_speed_knots*300/16;*/		//	trace(datas.waypoint_bearing_true)		}	}}