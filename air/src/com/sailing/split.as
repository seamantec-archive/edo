package com.sailing{	public class split {        private static var _instance:split;        private var _test:Boolean;        private var _value:Number;        private var _error:Boolean;        private var _a:Number;        private var _b:Number;		public function split() {            _test = false;            _value = 0;        }        public static function get instance():split {            if(_instance==null) {                _instance = new split();            }            return _instance;        }        public static function withValue(value:Number):split {            if(_instance==null) {                _instance = new split();            }            _instance.value = value;            return _instance;        }        public static function withTest():split {            if(_instance==null) {                _instance = new split();            }            _instance._test = true;            return _instance;        }        public function set value(value:Number):void {            if(!isNaN(value)) {                _error = false;                //_value = value;                var v:Number = Math.round(Math.abs(value) * 1000) / 1000;                _value = (value < 0 && v != 0) ? v * (-1) : v;                _a = Math.floor(Math.abs(_value));                _b = (Math.floor(Math.abs(_value) * 1000) / 1000) - Math.floor(Math.abs(_value));            } else {                _error = true;            }        }        public function get x():String {            if(_test) {                return "t";            }            var x:Number = Math.round(Math.abs(_value));            return ((_value<0 && x!=0) ? "-" : "") + x.toString();        }        public function get a2():String {            if(_test) {                return "t";            }            if(_error) {                return "--";            }            if(_value<0) {                if(_a>=10) {                    _error = true;                    return "--";                }                return "-" + _a.toString();            } else {                if(_a>=100) {                    _error = true;                    return "--";                }                return _a.toString();            }        }        public function get a3():String {            if(_test) {                return "t";            }            if(_error) {                return "---";            }            if(_value<0) {                if(_a>=100) {                    _error = true;                    return "---";                }                return "-" + _a.toString();            } else {                if(_a>=1000) {                    _error = true;                    return "---";                }                return _a.toString();            }        }        public function get a4():String {            if(_test) {                return "t";            }            if(_error) {                return "----";            }            if(_value<0) {                if(_a>=1000) {                    _error = true;                    return "----";                }                return "-" + _a.toString();            } else {                if(_a>=10000) {                    _error = true;                    return "----";                }                return _a.toString();            }        }        public function get a5():String {            if(_test) {                return "t";            }            if(_error) {                return "-----";            }            if(_value<0) {                if(_a>=10000) {                    _error = true;                    return "-----";                }                return "-" + _a.toString();            } else {                if(_a>=100000) {                    _error = true;                    return "-----";                }                return _a.toString();            }        }        public function get a01():String {            if(_test) {                return "t";            }            if(_error) {                return "-";            }            return "0";        }        public function get a02():String {            if(_test) {                return "t";            }            if(_error) {                return "--";            }            if(_value<0) {                if(_a>=10) {                    _error = true;                    return "--";                }                return "-" + _a.toString();            } else {                if(_a>=100) {                    _error = true;                    return "--";                }                return to10() + _a.toString();            }        }        public function get a03():String {            if(_test) {                return "t";            }            if(_error) {                return "---";            }            if(_value<0) {                if(_a>=100) {                    _error = true;                    return "---";                }                return "-" + to10() + _a.toString();            } else {                if(_a>=1000) {                    _error = true;                    return "---";                }                return to20() + _a.toString();            }        }        public function get a04():String {            if(_test) {                return "t";            }            if(_error) {                return "----";            }            if(_value<0) {                if(_a>=1000) {                    _error = true;                    return "----";                }                return "-" + to20() + _a.toString();            } else {                if(_a>=10000) {                    _error = true;                    return "----";                }                return to30() + _a.toString();            }        }        public function get a05():String {            if(_test) {                return "t";            }            if(_error) {                return "-----";            }            if(_value<0) {                if(_a>=10000) {                    _error = true;                    return "-----";                }                return "-" + to30() + _a.toString();            } else {                if(_a>=100000) {                    _error = true;                    return "-----";                }                return to40() + _a.toString();            }        }        public function get b1():String {            if(_test) {                return "t";            }            if(_error) {                return "-";            }            var b:Number = Math.round(_b*10);            return (b>=10) ? "9" : b.toString();        }        public function get b2():String {            if(_test) {                return "t";            }            if(_error) {                return "--";            }            var b:Number = Math.round(_b*100);            return (b>=100) ? "99" : (to10b(b) + b.toString());        }        public function get b3():String {            if(_test) {                return "t";            }            if(_error) {                return "---";            }            var b:Number = Math.round(_b*1000);            return (b>=1000) ? "999" : (to20b(b) + b.toString());        }        public function get b4():String {            if(_test) {                return "t";            }            if(_error) {                return "----";            }            var b:Number = Math.round(_b*10000);            return (b>=10000) ? "9999" : (to30b(b) + b.toString());        }        public function get b5():String {            if(_test) {                return "t";            }            if(_error) {                return "-----";            }            var b:Number = Math.round(_b*100000);            return (b>=100000) ? "99999" : (to40b(b) + b.toString());        }        private function to10():String {            return (_a<10) ? "0" : "";        }        private function to20():String {            return (_a<10) ? "00" : ((_a<100) ? "0" : "");        }        private function to30():String {            return (_a<10) ? "000" : ((_a<100) ? "00" : ((_a<1000) ? "0" : ""));        }        private function to40():String {            return (_a<10) ? "0000" : ((_a<100) ? "000" : ((_a<1000) ? "00" : ((_a<10000) ? "0" : "")));        }        private function to10b(b:Number):String {            return (b<10) ? "0" : "";        }        private function to20b(b:Number):String {            return (b<10) ? "00" : ((b<100) ? "0" : "");        }        private function to30b(b:Number):String {            return (b<10) ? "000" : ((b<100) ? "00" : ((b<1000) ? "0" : ""));        }        private function to40b(b:Number):String {            return (b<10) ? "0000" : ((b<100) ? "000" : ((b<1000) ? "00" : ((b<10000) ? "0" : "")));        }	}}